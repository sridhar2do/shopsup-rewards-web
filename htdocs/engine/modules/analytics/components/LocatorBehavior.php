<?php

namespace engine\modules\analytics\components;

use yii\base\Behavior;
use yii\web\Controller;

class LocatorBehavior extends Behavior {
	
	public $ownerLocationProperty = "location";
	
	public $supportParams = true;
	public $strictMode = false;
	
	public $latitudeHeader = "Location-latitude";
	public $longitudeHeader = "Location-longitude";
	public $speedHeader = "Location-speed";
	public $headingHeader = "Location-heading";
	public $providerHeader = "Location-provider";
	public $accuracyHeader = "Location-accuracy";
	public $timeHeader = "Location-time";
	public $radiusHeader = "Location-radius";

	public function init()
	{
		parent::init(); // TODO: Change the autogenerated stub
	}

	public function events() {
		
		return [ 
				Controller::EVENT_BEFORE_ACTION => 'traceLocation' 
		];
		
	}
	
	public function traceLocation($event) {
		
		$request = \Yii::$app->request;
		
		$latitude = $request->getHeaders ()->get ( $this->latitudeHeader, false, true );
		$longitude = $request->getHeaders ()->get ( $this->longitudeHeader, false, true );
		
		if (! $latitude || ! $longitude) {
			return true;
		}
		
		$data = [ ];
		
		$data ["latitude"] = $latitude;
		$data ["longitude"] = $longitude;
		$data ["speed"] = $request->getHeaders ()->get ( $this->speedHeader, false, true );
		$data ["heading"] = $request->getHeaders ()->get ( $this->headingHeader, false, true );
		$data ["provider"] = $request->getHeaders ()->get ( $this->providerHeader, false, true );
		$data ["accuracy"] = $request->getHeaders ()->get ( $this->accuracyHeader, false, true );
		$data ["time"] = $request->getHeaders ()->get ( $this->timeHeader, false, true );
		$data ["radius"] = $request->getHeaders ()->get ( $this->radiusHeader, false, true );
		
		$owner = $this->owner;
		$locationProperty = $this->ownerLocationProperty;
		
		if (property_exists ( $owner, $locationProperty )) {
			$owner->$locationProperty = $data;
		}
		
		return true;
	}
}